= Versions =


Version 0.9 will be the first beta release.  At this point, the program is mostly usable, with basic functionality and structure solidified.  The requirements for this version are listed below:

  * 0.9
    * Recognize most standard music objects, as listed below.  Recognition should be fairly accurate and reliable over a wide variety of users.
      * notes (heads, stems, and flags independently)
      * clefs (at least treble & bass)
      * accidentals (at least flat and sharp
      * Note additions (accents, staccato markings, rhythm dots)
      * slurs, ties
      * barlines
      * anything unrecognized should still be drawn and saved, so user can make annotations, etc, but marked as unrecognized
    * Association of new drawn markings with existing symbols
      * apply accidentals to correct note
      * apply stems to noteheads, flags to notes, etc.
      * apply noteheads to existing stem/notehead for chords (including the special case of whole note chords
      * apply slurs and ties to existing notes
    * Ability to erase symbols and markings with the stylus eraser.
    * Program should zoom and resize correctly, without causing notes to be lost or anything weird to happen
    * Robust - all possible errors should be handled, and bad input should not be able to crash the program
    * Flexible, well commented, and documented code structure so that it is easy to add new symbols or other features
    * Staff systems - more than one staff in a single system (such as piano staves, or orchestral scores
    * beams - ability to beam together sets of notes
    * time signatures - recognition of time signatures

A list of features that must be implemented before each version is tagged.  This should serve as a structure for coding the project.

  * 0.0:
    * This is the first commit, which is not usable.  It just indicates placement of some basic code structure in SVN.
  * 0.1:
    * Program should run without errors
    * A default "page" should appear on startup, with staves
    * A simple classifier should be implemented, recognizing noteheads, vertical lines, and categorizing everything else as "unknown".
    * Noteheads should be recognized when drawn, and attached to the appropriate staves
    * Barlines should be recognized when drawn, and attached to the appropriate staves
    * Vertical lines should be recognized and attached to single notes when appropriate
  * 0.2:
    * The basic code structure should be cemented
    * Support for multi-segment gestures should be implemented
    * Basic accidentals should be recognized and attached to appropriate notes
  * 0.3:
    * TBD